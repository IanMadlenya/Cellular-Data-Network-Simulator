{"name":"cellular-data-network-simulator","tagline":"Webapp to monitor network usage and simulate network link conditions","body":"# Cellular Data Network Simulator\r\n\r\nCellular Data Network Simulator is dedicated WiFi network to monitor network usage and simulate network link conditions for mobile applications. It uses well established technologies: OpenWrt, tc, iptables and CloudShark.\r\n\r\nRead more at [Polidea Blog](http://www.polidea.com/en/Blog,149,Simulating_cellular_data_network_over_Wifi)\r\n\r\n## Features\r\n\r\n* Easy to use web and mobile interface\r\n* Simulate: bandwidth, delay, loss, corruption, occasional loss of signal\r\n* Can capture the traffic and send it to CloudShark\r\n* Apply limits per-device\r\n* Works well in environment with multiple devices and multiple testers\r\n* Works well as virtual machine bridged with separate wireless network\r\n\r\n## Requirements\r\n\r\n* OpenWrt device running on **Barrier Breaker** ([trunk repository](http://downloads.openwrt.org/snapshots/trunk/)) - can be router or virtual machine\r\n* Two network interfaces - one for WAN and one for WIFI/LAN\r\n\r\n## Installation\r\n\r\nThe are a few simple steps to install Cellular Data Network Simulator:\r\n\r\n1. Install cdns:\r\n\r\n        opkg update\r\n        opkg install https://github.com/Polidea/Cellular-Data-Network-Simulator/releases/download/0.5/cdns_0.5-0_all.ipk\r\n        \r\n    Installation of Cellular Data Network Simulator replaces default Luci webpage. The Luci can be accessed using: http://ip-address/index-old.html\r\n\r\n2. Configure:\r\n\r\n        vim /etc/config/cdns\r\n\r\n    By default there are 5 profiles: Full, HSDPA, Edge, GPRS and Disabled.\r\n\r\n3. Start the service:\r\n\r\n        /etc/init.d/cdns enable\r\n        /etc/init.d/cdns start\r\n        \r\n    That simply enables and starts the service,\r\n        \r\n4. Start the uhttpd daemon:\r\n\r\n        /etc/init.d/uhttpd enable\r\n        /etc/init.d/uhttpd start\r\n\r\n    If you didnâ€™t do it before you have to enable and start the uhttpd daemon.\r\n    \r\n5. Start using:\r\n\r\n    Simply open: http://ip-address/.\r\n\r\n## Uninstallation\r\n\r\n        /etc/init.d/cdns stop\r\n        opkg uninstall cdns\r\n\r\n## Compile yourself\r\n\r\n1. Download sources:\r\n\r\n        git clone <repo-path>\r\n        \r\n2. Build the package yourself:\r\n\r\n        make\r\n        \r\n3. For more options view help:\r\n\r\n        make help\r\n\r\n\r\n## License\r\n\r\n       BSD 2-Clause License    \r\n\r\n## Changelog\r\n\r\n* First public release (25.11.2013)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}